{"name":"Metrics.net","tagline":"The Metrics.NET library provides a way of instrumenting applications with custom metrics (timers, histograms, counters etc) that can be reported in various ways and can provide insights on what is happening inside a running application.","body":"## Welcome to Metrics.NET\r\n\r\n[![Build status](https://ci.appveyor.com/api/projects/status/m6ng7uml4wqm3ni2)](https://ci.appveyor.com/project/etishor/metrics-net)\r\n[![Mono Build Status](https://api.travis-ci.org/etishor/Metrics.NET.svg)](https://travis-ci.org/etishor/Metrics.NET)\r\n\r\n#### What it is\r\nMetrics.NET library is a .NET Port, with lots of additional functionality, of the awesome Java [metrics library](https://github.com/dropwizard/metrics) by Coda Hale.\r\n\r\nTo paraphrase the Java library description - Metrics is a library which gives you unparalleled insight into what your code does in production. Metrics provides a powerful toolkit of ways to measure the behavior of critical components in your production environment.\r\n\r\n#### What it does\r\nIt can measure things like how long requests take, how often errors occur, how many items are in a cache and how often the cache is hit. It can measure any measurable aspect of the host application.\r\n\r\nOne of the main goals of the library is to have a minimal impact on the measured application, while at the same time making it easy to capture the desired metrics. A lot of effort has been invested in making the public API as simple and intuitive as possible.\r\n\r\nSupported runtimes: .NET 4.5.1, .NET 4.5, .NET 4.0 (on a separate branch) & Mono 3.8.0+ ( tested on OsX ).\r\n\r\n#### Who is it for\r\n[Developers](https://www.youtube.com/watch?v=8To-6VIJZRE) who need to see what is happening inside their systems at run-time. \r\n\r\nAny application, from a long running service to a web app to a console app can benefit from measuring what is happening while it is running. \r\n\r\nFor a very good introduction on why metrics are necesary I highly recommand Coda Hale's [talk about metrics](https://www.youtube.com/watch?v=czes-oa0yik) and [slides](https://dl.dropboxusercontent.com/u/2744222/2011-04-09-Metrics-Metrics-Everywhere.pdf).\r\n\r\n#### Why another port\r\nThis port is also inspired and contains some code from [Daniel Crenna's port](https://github.com/danielcrenna/metrics-net) of the same library.\r\n\r\nI have decided to write another .NET port of the same library since Daniel does not actively maintain metrics-net. \r\nI've also wanted to better understand the internals of the library and try to provide a better API, more suitable for the .NET world.\r\n\r\n## Visualization Demo\r\nThe visualization app is also avaliable on github: [Metrics.NET.FlotVisualization](https://github.com/etishor/Metrics.NET.FlotVisualization). \r\n\r\nA demo of the visualization app is available [here](http://www.erata.net/Metrics.NET/demo/). This demo uses fake, generated values for the metrics.\r\n\r\n#### License\r\n.NET Port of the awesome [Java metrics library by Coda Hale](https://github.com/dropwizard/metrics)\r\n\r\nThis port will always keep the same license as the original Java Metrics library.\r\n\r\nThe original metrics project is released under this therms (https://github.com/dropwizard/metrics):\r\nCopyright (c) 2010-2013 Coda Hale, Yammer.com\r\nPublished under Apache Software License 2.0, see LICENSE\r\n\r\nThe Daniel Crenna's idiomatic port is released under this therms (https://github.com/danielcrenna/metrics-net):\r\nThe original Metrics project is Copyright (c) 2010-2011 Coda Hale, Yammer.com\r\nThis idiomatic port of Metrics to C# and .NET is Copyright (c) 2011 Daniel Crenna\r\nBoth works are published under The MIT License, see LICENSE\r\n\r\nThis port ( Metrics.NET ) is release under Apache 2.0 License ( see LICENSE ) \r\nCopyright (c) 2014 Iulian Margarintescu","google":"UA-632446-1","note":"Don't delete this file! It's used internally to help with page regeneration."}